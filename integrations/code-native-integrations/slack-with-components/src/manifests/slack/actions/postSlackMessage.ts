/**
 * This file was automatically generated by spectral.
 * Any changes made will be overwritten.
 */
import type { Connection } from "@prismatic-io/spectral";
import { requireContext } from "@prismatic-io/spectral/dist/serverTypes";

export interface PostSlackMessageValues {
  /**
   * Connection
   *
   */
  connection: Connection;
  /**
   * Message
   *
   */
  message: string;
}

/**
 * Slack Message From Webhook
 *
 * @description Post a message to a Slack channel from a webhook URL
 */
export const postSlackMessage = {
  key: "postSlackMessage",
  perform: async <TReturn>(
    values: PostSlackMessageValues
  ): Promise<TReturn> => {
    const context = requireContext();
    return (await context.components.slack.postSlackMessage({
      ...values,
    })) as TReturn;
  },
  inputs: {
    connection: {
      inputType: "connection",
      collection: undefined,
      default: `null`,
      required: true,
    },
    message: {
      inputType: "text",
      collection: undefined,
      default: ``,
      required: true,
    },
  },
  examplePayload: { data: { text: "ok" } },
} as const;

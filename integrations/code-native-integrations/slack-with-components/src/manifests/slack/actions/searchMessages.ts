/**
 * This file was automatically generated by spectral.
 * Any changes made will be overwritten.
 */
import type { Connection } from "@prismatic-io/spectral";
import { requireContext } from "@prismatic-io/spectral/dist/serverTypes";

export interface SearchMessagesValues {
  /**
   * Query
   *
   */
  query: string;
  /**
   * Count
   *
   */
  count?: string;
  /**
   * Highlight
   *
   * @default false
   */
  highlight?: boolean;
  /**
   * Page
   *
   * @default 1
   */
  page?: string;
  /**
   * Sort
   *
   * @default score
   */
  sort?: string;
  /**
   * Sort Direction
   *
   * @default desc
   */
  sort_dir?: string;
  /**
   * Team Id
   *
   */
  team_id?: string;
  /**
   * Connection
   *
   */
  connection: Connection;
}

/**
 * Search Messages
 *
 * @description Searches for messages matching a query.
 */
export const searchMessages = {
  key: "searchMessages",
  perform: async <TReturn>(values: SearchMessagesValues): Promise<TReturn> => {
    const context = requireContext();
    return (await context.components.slack.searchMessages({
      ...values,
    })) as TReturn;
  },
  inputs: {
    query: {
      inputType: "string",
      collection: undefined,
      default: ``,
      required: true,
    },
    count: {
      inputType: "string",
      collection: undefined,
      default: ``,
    },
    highlight: {
      inputType: "boolean",
      collection: undefined,
      default: `false`,
    },
    page: {
      inputType: "string",
      collection: undefined,
      default: `1`,
    },
    sort: {
      inputType: "string",
      collection: undefined,
      default: `score`,
    },
    sort_dir: {
      inputType: "string",
      collection: undefined,
      default: `desc`,
    },
    team_id: {
      inputType: "string",
      collection: undefined,
      default: ``,
    },
    connection: {
      inputType: "connection",
      collection: undefined,
      default: `null`,
      required: true,
    },
  },
  examplePayload: {
    data: {
      ok: true,
      query: "The meaning of life the universe and everything",
      messages: {
        total: 2,
        paging: { page: 1, count: 20, pages: 1, total: 2 },
        matches: [
          {
            ts: "1508284197.000015",
            iid: "cb64bdaa-c1e8-4631-8a91-0f78080113e9",
            team: "T12345678",
            text: "The meaning of life the universe and everything is 42.",
            type: "message",
            user: "U2U85N1RV",
            channel: {
              id: "C12345678",
              name: "general",
              is_mpim: false,
              is_shared: false,
              is_private: false,
              is_ext_shared: false,
              is_org_shared: false,
              pending_shared: [],
              is_pending_ext_shared: false,
            },
            username: "roach",
            permalink:
              "https://hitchhikers.slack.com/archives/C12345678/p1508284197000015",
          },
          {
            ts: "1508795665.000236",
            iid: "9a00d3c9-bd2d-45b0-988b-6cff99ae2a90",
            team: "T12345678",
            text: "The meaning of life the universe and everything is 101010",
            type: "message",
            user: "",
            channel: {
              id: "C12345678",
              name: "random",
              is_mpim: false,
              is_shared: false,
              is_private: false,
              is_ext_shared: false,
              is_org_shared: false,
              pending_shared: [],
              is_pending_ext_shared: false,
            },
            username: "robot overlord",
            permalink:
              "https://hitchhikers.slack.com/archives/C12345678/p1508795665000236",
          },
        ],
        pagination: {
          last: 2,
          page: 1,
          first: 1,
          per_page: 20,
          page_count: 1,
          total_count: 2,
        },
      },
    },
  },
} as const;

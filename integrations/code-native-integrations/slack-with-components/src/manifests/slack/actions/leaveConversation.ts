/**
 * This file was automatically generated by spectral.
 * Any changes made will be overwritten.
 */
import type { Connection } from "@prismatic-io/spectral";
import { requireContext } from "@prismatic-io/spectral/dist/serverTypes";

export interface LeaveConversationValues {
  /**
   * Channel Name or ID
   *
   */
  channelName: string;
  /**
   * Connection
   *
   */
  connection: Connection;
}

/**
 * Leave Conversations
 *
 * @description Leave an existing conversation
 */
export const leaveConversation = {
  key: "leaveConversation",
  perform: async <TReturn>(
    values: LeaveConversationValues
  ): Promise<TReturn> => {
    const context = requireContext();
    return (await context.components.slack.leaveConversation({
      ...values,
    })) as TReturn;
  },
  inputs: {
    channelName: {
      inputType: "string",
      collection: undefined,
      default: ``,
      required: true,
    },
    connection: {
      inputType: "connection",
      collection: undefined,
      default: `null`,
      required: true,
    },
  },
  examplePayload: { data: { ok: true, not_in_channel: true } },
} as const;

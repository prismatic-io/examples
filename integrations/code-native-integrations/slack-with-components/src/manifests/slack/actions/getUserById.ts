/**
 * This file was automatically generated by spectral.
 * Any changes made will be overwritten.
 */
import type { Connection } from "@prismatic-io/spectral";
import { requireContext } from "@prismatic-io/spectral/dist/serverTypes";

export interface GetUserByIdValues {
  /**
   * User Id
   *
   */
  user: string;
  /**
   * Connection
   *
   */
  connection: Connection;
}

/**
 * Get User By ID
 *
 * @description Get a user's information by ID
 */
export const getUserById = {
  key: "getUserById",
  perform: async <TReturn>(values: GetUserByIdValues): Promise<TReturn> => {
    const context = requireContext();
    return (await context.components.slack.getUserById({
      ...values,
    })) as TReturn;
  },
  inputs: {
    user: {
      inputType: "string",
      collection: undefined,
      default: ``,
      required: true,
    },
    connection: {
      inputType: "connection",
      collection: undefined,
      default: `null`,
      required: true,
    },
  },
  examplePayload: {
    data: {
      ok: true,
      user: {
        id: "example",
        tz: "America/Chicago",
        name: "Example User",
        color: "example",
        deleted: false,
        profile: {
          team: "example",
          email: "example",
          phone: "example",
          skype: "example",
          title: "example",
          real_name: "Slackbots",
          first_name: "example",
          display_name: "example",
          real_name_normalized: "example",
        },
        real_name: "Example User",
      },
    },
  },
} as const;

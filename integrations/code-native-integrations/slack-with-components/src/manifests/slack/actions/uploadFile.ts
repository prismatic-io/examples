/**
 * This file was automatically generated by spectral.
 * Any changes made will be overwritten.
 */
import type { Connection } from "@prismatic-io/spectral";
import { requireContext } from "@prismatic-io/spectral/dist/serverTypes";

export interface UploadFileValues {
  /**
   * Connection
   *
   */
  connection: Connection;
  /**
   * File Content
   *
   */
  fileContent: string;
  /**
   * File Name
   *
   */
  fileName: string;
  /**
   * File Title
   *
   */
  title?: string;
  /**
   * Channels
   *
   */
  channels?: string;
  /**
   * Initial Comment
   *
   */
  initialComment?: string;
  /**
   * Thread Reply
   *
   */
  thread?: string;
}

/**
 * Upload File
 *
 * @description Upload a new file to a slack conversation
 */
export const uploadFile = {
  key: "uploadFile",
  perform: async <TReturn>(values: UploadFileValues): Promise<TReturn> => {
    const context = requireContext();
    return (await context.components.slack.uploadFile({
      ...values,
    })) as TReturn;
  },
  inputs: {
    connection: {
      inputType: "connection",
      collection: undefined,
      default: `null`,
      required: true,
    },
    fileContent: {
      inputType: "data",
      collection: undefined,
      default: ``,
      required: true,
    },
    fileName: {
      inputType: "string",
      collection: undefined,
      default: ``,
      required: true,
    },
    title: {
      inputType: "string",
      collection: undefined,
      default: ``,
    },
    channels: {
      inputType: "string",
      collection: undefined,
      default: ``,
    },
    initialComment: {
      inputType: "string",
      collection: undefined,
      default: ``,
    },
    thread: {
      inputType: "string",
      collection: undefined,
      default: ``,
    },
  },
  examplePayload: {
    data: {
      ok: true,
      file: {
        id: "F0TD0GUTS",
        ims: [],
        mode: "snippet",
        name: "-.txt",
        size: 11,
        user: "U0L4B9NSU",
        lines: 1,
        title: "Untitled",
        groups: [],
        shares: {
          public: {
            C061EG9SL: [
              {
                ts: "1532294750.000001",
                team_id: "T061EG9R6",
                reply_count: 0,
                reply_users: [],
                channel_name: "general",
                reply_users_count: 0,
              },
            ],
          },
        },
        created: 1532294750,
        preview: "launch plan",
        channels: ["C061EG9SL"],
        editable: true,
        filetype: "text",
        mimetype: "text/plain",
        username: "",
        edit_link: "https://.../.txt/edit",
        is_public: true,
        permalink: "https://.../.txt",
        timestamp: 1532294750,
        is_starred: false,
        lines_more: 0,
        is_external: false,
        pretty_type: "Plain Text",
        url_private: "https://.../.txt",
        external_type: "",
        comments_count: 0,
        display_as_bot: false,
        has_rich_preview: false,
        permalink_public: "https://.../.txt",
        preview_highlight:
          '<div class="CodeMirror cm-s-default CodeMirrorServer" oncopy="if(event.clipboardData){event.clipboardData.setData(\'text/plain\',window.getSelection().toString().replace(/\\u200b/g,\'\'));event.preventDefault();event.stopPropagation();}">\n<div class="CodeMirror-code">\n<div><pre>launch plan</pre></div>\n</div>\n</div>\n',
        public_url_shared: false,
        preview_is_truncated: false,
        url_private_download: "https://...download/-.txt",
      },
    },
  },
} as const;

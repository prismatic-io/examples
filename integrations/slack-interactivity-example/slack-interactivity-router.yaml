category: ''
configPages:
  - elements: []
    name: Configuration
    tagline: ''
defaultInstanceProfile: Default Instance Profile
definitionVersion: 7
description: ''
documentation: >-
  Allow Dropbox instances to register pairs of dropbox account IDs and webhook
  URLs, and route change notifications from Dropbox that contain dropbox account
  IDs to the correct webhook URLs.
endpointType: flow_specific
flows:
  - description: >-
      Other instances call this endpoint to register or deregister a mapping of
      Dropbox account <> customer instance URL
    endpointSecurityType: customer_optional
    isSynchronous: false
    name: Registration Endpoint
    steps:
      - action:
          component:
            isPublic: true
            key: webhook-triggers
            version: LATEST
          key: webhook
        description: ''
        inputs:
          body:
            type: value
            value: ''
          contentType:
            type: value
            value: ''
          headers:
            type: complex
            value: []
          statusCode:
            type: value
            value: ''
        isTrigger: true
        name: Integration Trigger
      - action:
          component:
            isPublic: true
            key: branch
            version: LATEST
          key: branchOnValue
        branches:
          - name: Register
            steps:
              - action:
                  component:
                    isPublic: true
                    key: log
                    version: LATEST
                  key: writeLog
                description: ''
                inputs:
                  level:
                    type: value
                    value: info
                  message:
                    type: template
                    value: >-
                      Registering Slack Channel
                      "{{$integrationTrigger.results.body.data.channelId}}" to
                      send requests to
                      "{{$integrationTrigger.results.body.data.instanceInteractivityWebhookUrl}}"
                name: Log registration
              - action:
                  component:
                    isPublic: true
                    key: persist-data
                    version: LATEST
                  key: saveCrossFlowValue
                description: ''
                inputs:
                  keyInput:
                    type: reference
                    value: integrationTrigger.results.body.data.channelId
                  valueInput:
                    type: reference
                    value: >-
                      integrationTrigger.results.body.data.instanceInteractivityWebhookUrl
                name: Cross Flow - Save Value
          - name: Deregister
            steps:
              - action:
                  component:
                    isPublic: true
                    key: log
                    version: LATEST
                  key: writeLog
                description: ''
                inputs:
                  level:
                    type: value
                    value: info
                  message:
                    type: template
                    value: >-
                      Deregistering Slack Channel
                      "{{$integrationTrigger.results.body.data.channelId}}"
                name: Log deregistration
              - action:
                  component:
                    isPublic: true
                    key: persist-data
                    version: LATEST
                  key: removeCrossFlowValue
                description: ''
                inputs:
                  keyInput:
                    type: reference
                    value: integrationTrigger.results.body.data.channelId
                name: Cross Flow - Remove Value
          - name: Else
            steps: []
        description: ''
        inputs:
          branchValueMappings:
            type: complex
            value:
              - name: Register
                type: value
                value: register
              - name: Deregister
                type: value
                value: deregister
          inputValue:
            type: reference
            value: integrationTrigger.results.body.data.event
        name: Branch on Value
  - description: Dispatch a Dropbox request to a customer's instance
    endpointSecurityType: customer_optional
    isSynchronous: false
    name: Route Request
    steps:
      - action:
          component:
            isPublic: true
            key: webhook-triggers
            version: LATEST
          key: webhook
        description: ''
        inputs:
          body:
            type: value
            value: ''
          contentType:
            type: value
            value: ''
          headers:
            type: complex
            value: []
          statusCode:
            type: value
            value: ''
        isTrigger: true
        name: Receive Slack Webhook
      - action:
          component:
            isPublic: true
            key: change-data-format
            version: LATEST
          key: deserializeFormData
        description: ''
        inputs:
          data:
            type: reference
            value: receiveSlackWebhook.results.body
        name: Deserialize URL-encoded Form Data
      - action:
          component:
            isPublic: true
            key: change-data-format
            version: LATEST
          key: deserializeFromJson
        description: ''
        inputs:
          data:
            type: reference
            value: deserializeUrlEncodedFormData.results.payload
        name: Deserialize JSON
      - action:
          component:
            isPublic: true
            key: persist-data
            version: LATEST
          key: getCrossFlowValue
        description: ''
        inputs:
          defaultValueInput:
            type: value
            value: ''
          keyInput:
            type: reference
            value: deserializeJson.results.channel.id
        name: Cross Flow - Get Value
      - action:
          component:
            isPublic: true
            key: http
            version: LATEST
          key: httpPost
        description: ''
        inputs:
          connection:
            type: configVar
            value: ''
          data:
            type: reference
            value: receiveSlackWebhook.results.body
          debugRequest:
            type: value
            value: 'false'
          headers:
            type: complex
            value: []
          ignoreSslErrors:
            type: value
            value: 'false'
          includeFullResponse:
            type: value
            value: 'false'
          maxRetries:
            type: value
            value: '0'
          queryParams:
            type: complex
            value: []
          responseType:
            type: value
            value: json
          retryDelayMS:
            type: value
            value: '0'
          retryOnAllErrors:
            type: value
            value: 'false'
          timeout:
            type: value
            value: ''
          url:
            type: reference
            value: crossFlowGetValue.results
          useExponentialBackoff:
            type: value
            value: 'false'
        name: POST Request
  - description: View persisted data for debugging purposes
    endpointSecurityType: customer_optional
    isSynchronous: false
    name: Print Persisted Data
    steps:
      - action:
          component:
            isPublic: true
            key: webhook-triggers
            version: LATEST
          key: webhook
        description: ''
        inputs:
          body:
            type: value
            value: ''
          contentType:
            type: value
            value: ''
          headers:
            type: complex
            value: []
          statusCode:
            type: value
            value: ''
        isTrigger: true
        name: Print Persisted Data Trigger
      - action:
          component:
            isPublic: true
            key: code
            version: LATEST
          key: runCode
        description: ''
        inputs:
          code:
            type: value
            value: >-
              module.exports = async ({ crossFlowState }) => ({ data:
              crossFlowState })
        name: Return Persisted Data
name: Slack Interactivity Router


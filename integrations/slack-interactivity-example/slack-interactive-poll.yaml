category: ''
configPages:
  - elements:
      - type: configVar
        value: Slack Connection
    name: Configuration
  - elements:
      - type: configVar
        value: Select Channel
    name: Channel
    tagline: ''
    userLevelConfigured: false
defaultInstanceProfile: Default Instance Profile
definitionVersion: 7
description: >-
  Post an interactive message to a Slack channel and handle the responses to the
  post by sending a formatted message back to that channel.
documentation: ''
endpointType: flow_specific
flows:
  - description: >-
      Send a message to slack with buttons that call sibling flows in this
      integration
    endpointSecurityType: customer_optional
    isSynchronous: false
    name: Send Message
    steps:
      - action:
          component:
            isPublic: true
            key: webhook-triggers
            version: 9
          key: webhook
        description: POST a block message JSON
        inputs:
          body:
            type: value
            value: ''
          contentType:
            type: value
            value: ''
          headers:
            type: complex
            value: []
          statusCode:
            type: value
            value: ''
        isTrigger: true
        name: Trigger
      - action:
          component:
            isPublic: true
            key: slack
            version: 99
          key: postBlockMessage
        description: Forward block message to Slack
        inputs:
          blocks:
            type: reference
            value: trigger.results.body.data
          channelName:
            type: configVar
            value: Select Channel
          connection:
            type: configVar
            value: Slack Connection
          debug:
            type: value
            value: 'false'
          message:
            type: value
            value: Interactive post example.
          messageId:
            type: value
            value: ''
          username:
            type: value
            value: Food-Bot
        name: Post Block Message
  - description: Receive and process input responses to posted Slack message
    endpointSecurityType: customer_optional
    isSynchronous: false
    name: Handle Button Responses
    steps:
      - action:
          component:
            isPublic: true
            key: webhook-triggers
            version: 9
          key: webhook
        description: Receive interaction from router
        inputs:
          body:
            type: value
            value: ''
          contentType:
            type: value
            value: ''
          headers:
            type: complex
            value: []
          statusCode:
            type: value
            value: ''
        isTrigger: true
        name: Handle Button Responses Trigger
      - action:
          component:
            isPublic: true
            key: change-data-format
            version: 36
          key: deserializeFormData
        description: Parsing URL encoded JSON (1)
        inputs:
          data:
            type: reference
            value: handleButtonResponsesTrigger.results.body
        name: Deserialize URL-encoded Form Data
      - action:
          component:
            isPublic: true
            key: change-data-format
            version: 36
          key: deserializeFromJson
        description: Parsing URL encoded JSON (2)
        inputs:
          data:
            type: reference
            value: deserializeUrlEncodedFormData.results.payload
        name: Deserialize JSON
      - action:
          component:
            isPublic: true
            key: loop
            version: 19
          key: loopOverItems
        description: There could be multiple actions
        inputs:
          items:
            type: reference
            value: deserializeJson.results.actions
        name: Loop Over Items
        steps:
          - action:
              component:
                isPublic: true
                key: branch
                version: 36
              key: branchOnExpression
            branches:
              - name: Results Requested
                steps:
                  - action:
                      component:
                        isPublic: true
                        key: persist-data
                        version: 28
                      key: listInstanceKeys
                    description: Get all votes
                    inputs: {}
                    name: Flow - List Keys
                  - action:
                      component:
                        isPublic: true
                        key: persist-data
                        version: 28
                      key: getInstanceValue
                    description: Get winner value
                    inputs:
                      defaultValueInput:
                        type: value
                        value: ''
                      keyInput:
                        type: reference
                        value: flowListKeys.results.0
                    name: Flow - Get Value
                  - action:
                      component:
                        isPublic: true
                        key: slack
                        version: 99
                      key: postMessage
                    description: Send poll results to Slack
                    inputs:
                      channelName:
                        type: configVar
                        value: Select Channel
                      connection:
                        type: configVar
                        value: Slack Connection
                      debug:
                        type: value
                        value: 'false'
                      message:
                        type: template
                        value: >-
                          I only have one vote right now:
                          {{$flowGetValue.results}} is currently the winner.
                      messageId:
                        type: template
                        value: ''
                      username:
                        type: value
                        value: Food-Bot
                    name: Post Results
              - name: Else
                steps:
                  - action:
                      component:
                        isPublic: true
                        key: persist-data
                        version: 28
                      key: saveInstanceValue
                    description: Add or update vote for user
                    inputs:
                      keyInput:
                        type: reference
                        value: deserializeJson.results.user.username
                      valueInput:
                        type: reference
                        value: loopOverItems.currentItem.text.text
                    name: Flow - Save Value
                  - action:
                      component:
                        isPublic: true
                        key: slack
                        version: 99
                      key: postMessage
                    description: Send vote update to Slack
                    inputs:
                      channelName:
                        type: configVar
                        value: Select Channel
                      connection:
                        type: configVar
                        value: Slack Connection
                      debug:
                        type: value
                        value: 'false'
                      message:
                        type: template
                        value: >-
                          {{$deserializeJson.results.user.username}} is locked
                          in with a vote for: 
                          {{$loopOverItems.currentItem.text.text}}!
                      messageId:
                        type: value
                        value: ''
                      username:
                        type: value
                        value: Food-Bot
                    name: Post Message
            description: Is it a request for results?
            inputs:
              conditions:
                type: complex
                value:
                  - name: Results Requested
                    type: complex
                    value:
                      - and
                      - - equal
                        - name: ''
                          type: reference
                          value: loopOverItems.currentItem.text.text
                        - name: ''
                          type: value
                          value: Results
            name: Branch on Expression
  - description: ''
    endpointSecurityType: customer_optional
    isSynchronous: false
    name: Register with Router
    steps:
      - action:
          component:
            isPublic: true
            key: management-triggers
            version: 7
          key: instanceDeploy
        description: The instance was deployed
        inputs: {}
        isTrigger: true
        name: Instance Deploy Trigger
      - action:
          component:
            isPublic: true
            key: collection-tools
            version: 14
          key: createObject
        description: Information to send to router
        inputs:
          keyValueInput:
            type: complex
            value:
              - name:
                  type: value
                  value: event
                type: value
                value: register
              - name:
                  type: value
                  value: channelId
                type: configVar
                value: Select Channel
              - name:
                  type: value
                  value: instanceInteractivityWebhookUrl
                type: reference
                value: >-
                  instanceDeployTrigger.results.webhookUrls.Handle Button
                  Responses
        name: Create Object
      - action:
          component:
            isPublic: true
            key: http
            version: 104
          key: httpPost
        description: Send instance info to router
        inputs:
          connection:
            type: configVar
            value: ''
          data:
            type: reference
            value: createObject.results
          debugRequest:
            type: value
            value: 'false'
          headers:
            type: complex
            value: []
          ignoreSslErrors:
            type: value
            value: 'false'
          includeFullResponse:
            type: value
            value: 'false'
          maxRetries:
            type: value
            value: '0'
          queryParams:
            type: complex
            value: []
          responseType:
            type: value
            value: json
          retryDelayMS:
            type: value
            value: '0'
          retryOnAllErrors:
            type: value
            value: 'false'
          timeout:
            type: value
            value: ''
          url:
            type: value
            value: >-
              https://hooks.prismatic.io/trigger/SW5zdGFuY2VGbG93Q29uZmlnOmM2MjhkYzBiLTFhZDUtNGNhOC04NDJmLWYxYTEyNDQzODBmNQ==
          useExponentialBackoff:
            type: value
            value: 'false'
        name: POST Request
name: Slack Interactive Post Template
requiredConfigVars:
  - connection:
      component:
        isPublic: true
        key: slack
        version: 99
      key: oauth2
    dataType: connection
    inputs:
      authorizeUrl:
        meta:
          orgOnly: true
          visibleToCustomerDeployer: false
          visibleToOrgDeployer: false
        type: value
        value: 'https://slack.com/oauth/v2/authorize'
      clientId:
        meta:
          orgOnly: true
          visibleToCustomerDeployer: false
          visibleToOrgDeployer: false
        type: value
        value: Add your clientId here
      clientSecret:
        meta:
          orgOnly: true
          visibleToCustomerDeployer: false
          visibleToOrgDeployer: false
        type: value
        value: Add your clientSecret here
      isUser:
        meta:
          orgOnly: true
          visibleToCustomerDeployer: false
          visibleToOrgDeployer: false
        type: value
        value: 'false'
      revokeUrl:
        meta:
          orgOnly: true
          visibleToCustomerDeployer: false
          visibleToOrgDeployer: false
        type: value
        value: 'https://slack.com/api/auth.revoke'
      scopes:
        meta:
          orgOnly: true
          visibleToCustomerDeployer: false
          visibleToOrgDeployer: false
        type: value
        value: >-
          chat:write chat:write.public chat:write.customize channels:read
          groups:read im:read mpim:read
      signingSecret:
        meta:
          orgOnly: true
          visibleToCustomerDeployer: false
          visibleToOrgDeployer: false
        type: value
        value: 27343ae53e1ef5cf0f6bf1bb46ba37ac
      tokenUrl:
        meta:
          orgOnly: true
          visibleToCustomerDeployer: false
          visibleToOrgDeployer: false
        type: value
        value: 'https://slack.com/api/oauth.v2.access'
    key: Slack Connection
    onPremiseConnectionConfig: disallowed
    orgOnly: false
  - dataSource:
      component:
        isPublic: true
        key: slack
        version: 99
      key: selectChannels
    dataType: picklist
    defaultValue: ''
    description: Pick the channel into which you want to post messages
    inputs:
      connection:
        meta:
          orgOnly: true
          visibleToCustomerDeployer: false
          visibleToOrgDeployer: false
        type: configVar
        value: Slack Connection
      includeImChannels:
        meta:
          orgOnly: true
          visibleToCustomerDeployer: false
          visibleToOrgDeployer: false
        type: value
        value: 'false'
      includeMultiPartyImchannels:
        meta:
          orgOnly: true
          visibleToCustomerDeployer: false
          visibleToOrgDeployer: false
        type: value
        value: 'false'
      includePrivateChannels:
        meta:
          orgOnly: true
          visibleToCustomerDeployer: false
          visibleToOrgDeployer: false
        type: value
        value: 'false'
      includePublicChannels:
        meta:
          orgOnly: true
          visibleToCustomerDeployer: false
          visibleToOrgDeployer: false
        type: value
        value: 'true'
      showIdInDropdown:
        meta:
          orgOnly: true
          visibleToCustomerDeployer: false
          visibleToOrgDeployer: false
        type: value
        value: 'true'
    key: Select Channel
    orgOnly: false

